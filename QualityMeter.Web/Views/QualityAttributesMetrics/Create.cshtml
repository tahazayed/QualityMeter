@model QualityMeter.Core.Models.QualityAttributesMetric

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Quality Attributes Metric</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Subject">Subject</label>
            <div class="col-md-10">
                @Html.DropDownList("SubjectId", null, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="Factor">Factor</label>

            <div class="col-md-10">
                @Html.DropDownList("FactorId", null, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="Criteria">Criteria</label>

            <div class="col-md-10">
                @Html.DropDownList("CriteriaId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CriteriaId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="TypeOfMetric">Type Of Metric</label>
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.TypeOfMetric, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.TypeOfMetric, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantification, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantification, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="StandardValue">Standard Value</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.StandardValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StandardValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="EvaluationValue">Evaluation Value</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.EvaluationValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EvaluationValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="RouteBased">Route Based</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RouteBased, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RouteBased, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="RelatedToId">Related To</label>
            <div class="col-md-10">
                @Html.DropDownList("RelatedToId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RelatedToId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="AgainstId">Against</label>
            <div class="col-md-10">
                @Html.DropDownList("AgainstId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AgainstId, "", new { @class = "text-danger" })
            </div>
        </div>


        @Html.HiddenFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.LastUpdated, new { htmlAttributes = new { @class = "form-control" } })



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/js/dllCascade.js" type="text/javascript"></script>
}
